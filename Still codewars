Nathan loves cycling.

Because Nathan knows it is important to stay hydrated, he drinks 0.5 litres of water per hour of cycling.

You get given the time in hours and you need to return the number of litres Nathan will drink, rounded to the smallest value.

For example:

time = 3 ----> litres = 1

time = 6.7---> litres = 3

time = 11.8--> litres = 5

Solution:

function litres(time) {
  return Math.floor(time * 0.5);
}



The Menger Sponge is a three-dimensional fractal, first described by Karl Menger in 1926.

Mengers Sponge (Level 0-3)

An illustration of the iterative construction of a Menger sponge
A method of constructing a Menger Sponge can be visualized as follows:

Start from a cube (first part of image).
Scale down the cube so that side length is 1/3 of its original, and make 20 copies of it.
Place the copies so that they measure the same size as the original cube but without its central parts (next part of image)
Repeat the process from step 2 for the new smaller cubes from the previous step.
In each iteration (e.g. repeating the last three steps), the effect will be that parts of the cube will be removed, they'll never be added. Menger sponge will always consist of parts will never be removed, regardless of how many iterations you do.
An alternative explanation:

Start from a cube (first part of image).
Devide each cube into 27 equal sized cubes.
Remove the middle-cube and the six cubes on each side of the group of 27 cubes (second part of image).
Repeat the process from step 2 for the smaller cubes (third and fourth part of image).
Task
In this kata you will create a function that takes non negative integers (from 0 to n) and return the amount of cubes that the Menger Sponge would have in that specific iteration.

Example
For n = 0, the ouptut should be 1;
For n = 1, the output should be 20;
For n = 2, the output should be 400;
For n = 3, the output should be 8000;
for n = 4, the output should be 160000;
For n = 5, the output should be 3200000;
For n = 6, the output should be 64000000.


Solution:
function calc_ms(n) {
  var result = 1;
  if (n == 0){
    return result;
  } else {
    for (let i = 0; i < n; i++ ){
      result *= 20;
    }
      return result;
  }
  
  // Happy coding!
}



You received a whatsup message from an unknown number. Could it be from that girl/boy with a foreign accent you met yesterday evening?

Write a simple function to check if the string contains the word hallo in different languages.

These are the languages of the possible people you met the night before:

hello - english
ciao - italian
salut - french
hallo - german
hola - spanish
ahoj - czech republic
czesc - polish
Notes

you can assume the input is a string.
to keep this a beginner exercise you don't need to check if the greeting is a subset of word (Hallowen can pass the test)
function should be case insensitive to pass the tests


Solution:
function validateHello(greetings) {
  var res = ['hello', 'ciao', 'salut', 'hallo', 'hola', 'ahoj', 'czesc'];
    for (var i = 0; i < res.length; i++) {
        if (res[i] === greetings) {
            return true;
        }
    }
    return false;
}
